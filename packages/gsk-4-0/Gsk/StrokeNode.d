module Gsk.StrokeNode;

import Gid.gid;
import Gsk.Path;
import Gsk.RenderNode;
import Gsk.Stroke;
import Gsk.Types;
import Gsk.c.functions;
import Gsk.c.types;

/**
 * A render node that will fill the area determined by stroking the the given
 * [Gsk.Path] using the [Gsk.Stroke] attributes.
 */
class StrokeNode : RenderNode
{

  this(void* ptr, Flag!"Take" take = No.Take)
  {
    if (!ptr)
      throw new GidConstructException("Null instance pointer for Gsk.StrokeNode");

    super(cast(GskRenderNode*)ptr, take);
  }

  /**
   * Creates a #GskRenderNode that will fill the outline generated by stroking
   * the given path using the attributes defined in stroke.
   * The area is filled with child.
   * Params:
   *   child = The node to stroke the area with
   *   path = The path describing the area to stroke
   *   stroke = The stroke attributes to use
   * Returns: A new #GskRenderNode
   */
  this(RenderNode child, Path path, Stroke stroke)
  {
    GskRenderNode* _cretval;
    _cretval = gsk_stroke_node_new(child ? cast(GskRenderNode*)child.cPtr(No.Dup) : null, path ? cast(GskPath*)path.cPtr(No.Dup) : null, stroke ? cast(GskStroke*)stroke.cPtr(No.Dup) : null);
    this(_cretval, No.Take);
  }

  /**
   * Gets the child node that is getting drawn by the given node.
   * Returns: The child that is getting drawn
   */
  RenderNode getChild()
  {
    GskRenderNode* _cretval;
    _cretval = gsk_stroke_node_get_child(cast(GskRenderNode*)cPtr);
    auto _retval = _cretval ? new RenderNode(cast(GskRenderNode*)_cretval, No.Take) : null;
    return _retval;
  }

  /**
   * Retrieves the path that will be stroked with the contents of
   * the node.
   * Returns: a #GskPath
   */
  Path getPath()
  {
    GskPath* _cretval;
    _cretval = gsk_stroke_node_get_path(cast(GskRenderNode*)cPtr);
    auto _retval = _cretval ? new Path(cast(void*)_cretval, No.Take) : null;
    return _retval;
  }

  /**
   * Retrieves the stroke attributes used in this node.
   * Returns: a #GskStroke
   */
  Stroke getStroke()
  {
    const(GskStroke)* _cretval;
    _cretval = gsk_stroke_node_get_stroke(cast(GskRenderNode*)cPtr);
    auto _retval = _cretval ? new Stroke(cast(void*)_cretval, No.Take) : null;
    return _retval;
  }
}
