/// Module for [StrokeNode] class
module gsk.stroke_node;

import gid.gid;
import gsk.c.functions;
import gsk.c.types;
import gsk.path;
import gsk.render_node;
import gsk.stroke;
import gsk.types;

/**
    A render node that will fill the area determined by stroking the the given
    [gsk.path.Path] using the [gsk.stroke.Stroke] attributes.
*/
class StrokeNode : gsk.render_node.RenderNode
{

  /** */
  this(void* ptr, Flag!"Take" take = No.Take)
  {
    if (!ptr)
      throw new GidConstructException("Null instance pointer for gsk.stroke_node.StrokeNode");

    super(cast(GskRenderNode*)ptr, take);
  }

  /**
      Creates a #GskRenderNode that will fill the outline generated by stroking
      the given path using the attributes defined in stroke.
      
      The area is filled with child.
  
      Params:
        child = The node to stroke the area with
        path = The path describing the area to stroke
        stroke = The stroke attributes to use
      Returns: A new #GskRenderNode
  */
  this(gsk.render_node.RenderNode child, gsk.path.Path path, gsk.stroke.Stroke stroke)
  {
    GskRenderNode* _cretval;
    _cretval = gsk_stroke_node_new(child ? cast(GskRenderNode*)child._cPtr(No.Dup) : null, path ? cast(GskPath*)path._cPtr(No.Dup) : null, stroke ? cast(const(GskStroke)*)stroke._cPtr(No.Dup) : null);
    this(_cretval, No.Take);
  }

  /**
      Gets the child node that is getting drawn by the given node.
      Returns: The child that is getting drawn
  */
  gsk.render_node.RenderNode getChild()
  {
    GskRenderNode* _cretval;
    _cretval = gsk_stroke_node_get_child(cast(const(GskRenderNode)*)this._cPtr);
    auto _retval = _cretval ? new gsk.render_node.RenderNode(cast(GskRenderNode*)_cretval, No.Take) : null;
    return _retval;
  }

  /**
      Retrieves the path that will be stroked with the contents of
      the node.
      Returns: a #GskPath
  */
  gsk.path.Path getPath()
  {
    GskPath* _cretval;
    _cretval = gsk_stroke_node_get_path(cast(const(GskRenderNode)*)this._cPtr);
    auto _retval = _cretval ? new gsk.path.Path(cast(void*)_cretval, No.Take) : null;
    return _retval;
  }

  /**
      Retrieves the stroke attributes used in this node.
      Returns: a #GskStroke
  */
  gsk.stroke.Stroke getStroke()
  {
    const(GskStroke)* _cretval;
    _cretval = gsk_stroke_node_get_stroke(cast(const(GskRenderNode)*)this._cPtr);
    auto _retval = _cretval ? new gsk.stroke.Stroke(cast(void*)_cretval, No.Take) : null;
    return _retval;
  }
}
